syntax = "proto3";

package ocean;
option go_package="./ocean";


message IfInfoHashExistsRequest {
  bytes info_hash = 1;
}

message IfInfoHashExistsResponse {
  bool exists = 1;
}

message BatchInfoHashExistRequest {
  repeated bytes info_hashes = 1;
}

message BatchInfoHashExistResponse {
  repeated bool results = 1;
}

message File {
  int64 length = 1;
  repeated string paths = 2;
  bytes file_hash = 3;
}

message CommitTorrentRequest {
  bytes info_hash = 1;
  string name = 2;
  string publisher = 3;
  string source = 4;
  repeated File files = 5;
}

message CommitTorrentResponse {}

message ListTorrentInfoForTrackerRequest {
  int64 size = 1;
}

message ListTorrentInfoForTrackerResponse {
  repeated string info_hashes = 1;
}

message UpdateTrackerRequest {
  string info_hash = 1;
  uint32 seeders = 2;
  uint32 leechers = 3;
}

message UpdateTrackerResponse {}

message BatchUpdateTrackerRequest {
  repeated UpdateTrackerRequest requests = 1;
}

message BatchUpdateTrackerResponse {}

message SortParams {
  string field = 1;
  bool asc = 2;
}

message SearchTorrentsRequest {
  string keyword = 1;
  uint32 per_page = 2;
  uint32 page = 3;
  repeated SortParams sort_params = 4;
}

message Torrent {
  string info_hash = 1;
  string name = 2;
  string publisher = 3;
  string source = 4;
  uint32 seeders = 5;
  uint32 leechers = 6;
  repeated File files = 7;
}

message TorrentPageResponse {
  repeated Torrent torrents = 1;
  uint32 total = 2;
}

service Ocean {
  rpc IfInfoHashExists(IfInfoHashExistsRequest) returns (IfInfoHashExistsResponse);
  rpc BatchInfoHashExist(BatchInfoHashExistRequest) returns (BatchInfoHashExistResponse);
  rpc CommitTorrent(CommitTorrentRequest) returns (CommitTorrentResponse);
  rpc ListTorrentInfoForTracker(ListTorrentInfoForTrackerRequest) returns (ListTorrentInfoForTrackerResponse);
  rpc UpdateTracker(UpdateTrackerRequest) returns (UpdateTrackerResponse);
  rpc BatchUpdateTracker(BatchUpdateTrackerRequest) returns (BatchUpdateTrackerResponse);
  rpc SearchTorrents(SearchTorrentsRequest) returns (TorrentPageResponse);
}
